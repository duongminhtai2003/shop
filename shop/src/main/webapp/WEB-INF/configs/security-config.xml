<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<http use-expressions="true">
		<csrf disabled="true" /> 
		<intercept-url pattern="/admin/**" access="hasAnyRole('ROLE_ADMIN')" />
		<intercept-url pattern="/**" access="permitAll()" /> 
		<access-denied-handler error-page="/auth/403" />
		<form-login login-page='/auth/login' 
					login-processing-url="/auth/login" 
					default-target-url="/admin"
					always-use-default-target="false"
					authentication-failure-url="/auth/login?error=loginErr"
					username-parameter="username" 
					password-parameter="password" />
		<logout logout-url="/auth/logout" 
				logout-success-url="/auth/login"
				delete-cookies="JSESSIONID" invalidate-session="true" />
	</http>
	<authentication-manager>
		<!-- authentication from database -->
		<authentication-provider>
			<password-encoder hash="bcrypt" ref="bCryptPasswordEncoder" />
			<jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select email AS username, password, active from users where email = ?"
			authorities-by-username-query="SELECT u.email AS username, concat('ROLE_',r.name) role_name FROM users u INNER JOIN role r on u.role_id = r.id WHERE email = ?" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="bCryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</beans:bean>

</beans:beans>